{"meta":{"title":"10000's blog","subtitle":null,"description":"好少年光芒万丈","author":10000,"url":""},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-07-21T23:51:32.602Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘の0x2710] 与&nbsp; 0x2710&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-07-23T02:18:07.825Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-07-22T17:06:29.077Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"本站使用的技术 本主题由 Hexo 驱动 主题为Hexo版本的主题Sakura🌸 本站由JSDelivr提供CDN加速 博客托管于Github","keywords":"关于 Blog 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"}],"posts":[{"title":"盒子模型宽度计算规则","slug":"盒子模型宽度计算规则","date":"2020-07-27T03:57:37.000Z","updated":"2020-07-27T09:31:15.140Z","comments":true,"path":"2020/07/27/盒子模型宽度计算规则/","link":"","permalink":"/2020/07/27/盒子模型宽度计算规则/","excerpt":"","text":"前言这几天在学习负边距的时候发现一个问题： 当div(其父元素宽高为200px，未设置其他属性)宽度auto的时候，设置margin-left为负100px时，浏览器控制台中的盒子模型中with(内容宽度)变为300px，效果如下： HTML和css如下： &lt;div id=&quot;test1&quot;&gt; &lt;div id=&quot;test2&quot;&gt;&lt;/div&gt; &lt;/div&gt; #test1 { width: 200px; height: 200px; background: burlywood; } #test2 { width: auto; margin-left: -100px; } 这与盒子模型的计算规则有关，下面将详细说一下盒子模型的计算规则 以下内容均以标准盒子模型为准 在了解计算规则之前，先了解两个名词概念 计算值和使用值计算值 计算值指的是属性中所定义的值，如width：100px这个值即计算值 使用值 使用值简单说就是用于渲染的值,大部分情况下使用值和计算值相同 详细描述见6.1 Specified, computed, and actual values 行内非替换元素css规范中，行内非替换元素的宽度计算有如下说明： The ‘width’ property does not apply. A computed value of ‘auto’ for ‘margin-left’ or ‘margin-right’ becomes a used value of ‘0’. 谷歌翻译为： ​ 在“宽度”属性不适用。“左边距”或“右边距 ”的“自动”计算值变为使用值“ 0”。 即： 宽度不适用，行内非替换元素的宽度由内容决定 margin-left/margin-right 计算值为 auto 时 使用值为 0 行内替换元素 margin-left/margin-right 计算值为 auto 时 使用值为0 width和height计算值都为 auto 并且元素具有固有宽度，width 值为固有宽度的值 width和height计算值都为 auto 且元素没有固有宽度，但有固有高度或者指定高度且有固有比例，此时width的使用值为：高度使用值*比例 width和height计算值都为auto 并且元素具有固有比率，若该元素没有固有宽高，则则CSS 2.2中未定义’width’的使用值，CSS2.2中建议如果元素的宽度本身不取决于替换元素的宽度，则 width 的使用值是根据文档流中块级非替换元素的公式计算得出的 width的计算值为 auto ，并且元素具有固有宽度，则该固有宽度就是 width 的使用值 width 的计算值为 auto 但不满足上述任何条件，则宽度的使用值则为300px，若300px太宽无法被设备容纳，则使用宽高比为2:1的矩形宽度来代替(此处机翻可能有误，暂未验证) 块级非替换元素计算公式margin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 包含块(containing block)宽度 如果border-left、padding-left、width、border-right、padding-right均不为auto，且margin-left和left有非auto计算值，则被称为为过度约束， 如果direction(文本排列方向)为ltr,则margin-right属性值将被忽略，且该属性的使用值为使计算公式成立的值，如果direction(文本排列方向)为rtl则margin-left被忽略使用值同上 如果将width计算值为auto，则其他所有auto使用值将变为0，且width = 包含块宽度(此时内容宽度为100%) - 当前所有指定值的和 当width不为auto，且margin-left和margin-right都是auto时，它们的应用值相等。此时，该元素相对于包含块边界水平居中。 其中第2条：当 width 计算值为 auto 时 width = 包含块宽度 - 负边距即width的使用值增加，即为上述问题的答案 其中第3条是块级元素通过 margin：0 auto 水平居中的原理 注意：margin默认值为0，所以需要手动设置auto 未完待续……","categories":[{"name":"笔记","slug":"笔记","permalink":"/categories/笔记/"}],"tags":[{"name":"前端","slug":"前端","permalink":"/tags/前端/"},{"name":"CSS","slug":"CSS","permalink":"/tags/CSS/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"/categories/笔记/"}]},{"title":"拉取github项目到本地进行开发","slug":"拉取github项目到本地进行开发","date":"2020-07-26T14:11:16.000Z","updated":"2020-07-26T15:32:03.646Z","comments":true,"path":"2020/07/26/拉取github项目到本地进行开发/","link":"","permalink":"/2020/07/26/拉取github项目到本地进行开发/","excerpt":"","text":"前言本教程建立在你已经安装git并完成添加Github公匙 配置当你想在一个新文件夹中拉取github仓库中的代码并进行同步开发时可参照本教程 1.关联远程仓库使用 git remote add [shortname] [url] 来关联远程仓库 如 git remote add origin &#x67;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#111;&#109;:0x2710-10000/Pages.git 其中 shortname用来指其后的仓库地址的简称 url 可以支持3种类型：(此处示例摘自菜鸟教程笔记) git@github.com:fsliurujie/test.git --SSH协议 git://github.com/fsliurujie/test.git --GIT协议 https://github.com/fsliurujie/test.git --HTTPS协议 2.拉取仓库对应分支的更新使用 git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; 来拉取更新 如 git pull origin master:master 如果远程分支master要与当前分支合并，则冒号后面可以省略,简写为: git pull origin master 如果当前分支与远程分支存在追踪关系，就可以省略远程分支名: git pull origin 如果当前分支只有一个追踪分支，远程主机名也可以省略： git pull 所以这里如果仓库就只有一个分支使用 git pull 即可 若有多个分支，使用 git pull &lt;远程主机名&gt; &lt;远程分支名&gt; 即可","categories":[{"name":"教程","slug":"教程","permalink":"/categories/教程/"}],"tags":[{"name":"Git","slug":"Git","permalink":"/tags/Git/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"/categories/教程/"}]},{"title":"VSCode 自定义H5 Vue 模板","slug":"VSCode 自定义H5 Vue 模板","date":"2020-07-23T02:50:16.000Z","updated":"2020-07-23T02:58:14.835Z","comments":true,"path":"2020/07/23/VSCode 自定义H5 Vue 模板/","link":"","permalink":"/2020/07/23/VSCode 自定义H5 Vue 模板/","excerpt":"","text":"1.打开html.json文件​ 文件(File)→首选项→用户片段(User Snippets)​​ 在弹出的搜索框输入 html 打开html.json 2.设置H5 模板​ 打开html.json后在大括号中填入： &quot;h5 模板&quot;: { // 模板名 &quot;prefix&quot;: &quot;vh&quot;, // 快捷键 &quot;body&quot;: [ // Document 内容 &quot;&lt;!DOCTYPE html&gt;&quot;, &quot;&lt;html lang=\\&quot;zh-CN\\&quot;&gt;&quot;, &quot;&lt;head&gt;&quot;, &quot;\\t&lt;meta charset=\\&quot;UTF-8\\&quot;&gt;&quot;, &quot;\\t&lt;meta name=\\&quot;viewport\\&quot; content=\\&quot;width=device-width, initial-scale=1.0\\&quot;&gt;&quot;, &quot;\\t&lt;title&gt;Document&lt;/title&gt;&quot;, &quot;\\t&lt;script src=\\&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\\&quot;&gt;&lt;/script&gt;&quot;, &quot;&lt;/head&gt;&quot;, &quot;&lt;body&gt;&quot;, &quot;\\t&lt;div id =\\&quot;app\\&quot;&gt; &lt;/div&gt;\\n&quot;, &quot;\\t&lt;script&gt;&quot;, &quot;\\t//创建Vue实例,得到 ViewModel&quot;, &quot;\\tvar vm = new Vue({&quot;, &quot;\\t\\tel: &#39;#app&#39;,&quot;, &quot;\\t\\tdata: {},&quot;, &quot;\\t\\tmethods: {}&quot;, &quot;\\t});&quot;, &quot;\\t&lt;/script&gt;&quot;, &quot;&lt;/body&gt;&quot;, &quot;&lt;/html&gt;&quot; ], &quot;description&quot;: &quot;vue html5 模板&quot; // 描述 } 注意：自定义时注意转义字符 3.使用方法​ 创建html文件后，输入快捷，键按Tab或 Enter 即可","categories":[{"name":"教程","slug":"教程","permalink":"/categories/教程/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"/tags/vscode/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"/categories/教程/"}]},{"title":"Display inline, inline-block, block 的区别","slug":"display inline inlineblock block 的区别","date":"2020-07-22T10:47:50.000Z","updated":"2020-07-27T08:55:42.059Z","comments":true,"path":"2020/07/22/display inline inlineblock block 的区别/","link":"","permalink":"/2020/07/22/display inline inlineblock block 的区别/","excerpt":"","text":"前言前端时间学习Vue的时候写了个轮播图，期间偶然发现display block和inline-block元素高度竟然不一样Σ( ° △ °|||)︴ 于是在搜索引擎上一顿查找，终于找到了答案 这里呢，准备顺带说一下另外两个属性 inline元素 inlineThe element generates one or more inline element boxes that do not generate line breaks before or after themselves. In normal flow, the next element will be on the same line if there is space 上面引用自 MDN web docs display 翻译过来： 元素会生成一个或多个内联元素框，这些框不会在自身之前或之后产生换行符。在文档流中，如果有空间，则下一个元素将和这个元素在同一行上 当你在vscode中给一个block元素设置宽高属性之后再写上display:inline; 会发现编译器发出如下警告： 上面是width属性的解释可以忽略 下面翻译过来是： 由于display，该属性被忽略。 使用&#39;display：inline&#39;，width，height，margin-top，margin-bottom和float属性无效 总结 inline 元素特点： 元素显示为行内元素，空间足够时，多个inline元素将在同一行 width、height、margin-top、margin-bottom和float属性无效 注意行高和padding等属性有效 宽高由内容决定 block元素 blockThe element generates a block element box, generating line breaks both before and after the element when in the normal flow. 引用自 MDN web docs display 翻译过来： 该元素生成一个块元素框，在正常流中时在元素之前和之后都产生换行符。 总结 block 元素特点： 元素前后产生换行，即元素独占一行 默认宽度是100% 宽高边距等均有效 inline-block元素英语太差没在官网找到解释，这里贴一段百度到的解释(不保证语义完全正确) inline-block将对象呈递为内联对象，但是对象的内容作为块对象呈递。旁边的内联对象会被呈递在同一行内 即inline-block具备inline和block两种特点 元素可在同一行显示 元素的宽高等可调 inline-block和block对齐下面回到最开始的问题 这里为了方便大家理解引用 CSDN博主水荷的博客inline-block对齐，设置inline-block元素内容不同位置相互影响原因中的示例 对两个并列元素设置了display: inline-block;以为他们的位置是这个样子结果确是这个样子：我们来看一下这个div的界限发现，左边图片贴在div的顶部，右边气泡并没有贴着div的顶部，解决方法：给两个inline-block元素加上以下属性： vertical-align:top; 问题解决了 原因是inline-block元素将对象呈递为内联对象 也就是说inline-block的对齐方式将使用inline的对齐方式(baseline对齐) 引用原博客的结论： 对于一个inline-block元素，如果内部没有inline内联元素，或者overflow不是visible，则该元素的基线就是它margin的底边缘，否则就是元素内部最后一行内联元素的基线。对此我们有多种解决办法：1、暴力float，当然这是备选方案，毕竟脱离文档流后页面元素会不好控制2、简单粗暴地给所有元素都加上内容，例如空格符3、设置所有内联元素 vertical-align: top/middle/bottom; 属性，改变默认设置。","categories":[{"name":"笔记","slug":"笔记","permalink":"/categories/笔记/"}],"tags":[{"name":"前端","slug":"前端","permalink":"/tags/前端/"},{"name":"CSS","slug":"CSS","permalink":"/tags/CSS/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"/categories/笔记/"}]},{"title":"GitHub Pages 自定义域名","slug":"GithubPages自定义域名","date":"2020-07-21T08:52:36.000Z","updated":"2020-07-22T06:29:27.088Z","comments":true,"path":"2020/07/21/GithubPages自定义域名/","link":"","permalink":"/2020/07/21/GithubPages自定义域名/","excerpt":"","text":"购买域名​ 在腾讯云、阿里云、华为云等域名提供商购买域名 ​ 这里以腾讯云为例 解析​ 1.进入域名解析控制台(各大平台的入口不一，详情参见域名提供商的帮助文档) ​ 2.添加记录 记录类型 主机记录 记录值 CNAME blog 你的github用户名.github.io 记录类型：CNAME​ 将一个域名指向另一个域名，并由另一个域名提供IP地址 主机记录若你购买的域名为 example.com 主机记录设置为bolg则你的博客地址为bolg.example.com 可以根据自己的喜好更改此地址 记录值​ 指向的域名，即你的Github Pages地址的域名，格式为你的github用户名.github.io(不要加https://哦) Github 配置​ 进入Github你托管的博客项目，点击setting ​ 在Github Pages中找到Custom domain并输入上述设置的域名(如blog.example.com)并保存 hexo配置​ 如果你使用的是hexo，会发现每次部署的时候github的配置都不生效，因为Github配置实际上是在项目目录下生成一个名为 CNAME 的文件，但你本地目录并没有这个文件，所以在你本地博客的source目录下新建一个名为 CNAME 的文件，文件内容为你的域名然后保存","categories":[{"name":"教程","slug":"教程","permalink":"/categories/教程/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"/tags/悦读/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"/categories/教程/"}]}]}